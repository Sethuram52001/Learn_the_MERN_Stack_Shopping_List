{"version":3,"sources":["components/AppNavbar.js","actions/types.js","actions/itemActions.js","components/ShoppingList.js","reducers/itemReducer.js","reducers/index.js","store.js","components/ItemModal.js","App.js","reportWebVitals.js","index.js"],"names":["AppNavbar","state","isOpen","toggle","setState","Navbar","color","dark","expand","className","Container","NavbarBrand","href","NavbarToggler","onClick","this","Collapse","navbar","Nav","NavItem","NavLink","Component","GET_ITEMS","ADD_ITEM","DELETE_ITEM","ITEMS_LOADING","setItemsLoading","type","ShoppingList","onDeleteClick","id","props","deleteItem","console","log","getItems","items","item","ListGroup","TransitionGroup","map","_id","name","CSSTransition","timeout","classNames","ListGroupItem","Button","size","bind","connect","dispatch","axios","get","then","res","payload","data","delete","initialState","loading","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","ItemModal","modal","onChange","e","target","value","onSubmit","preventDefault","newItem","addItem","style","marginBottom","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","for","Input","placeholder","marginTop","block","post","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22abec10.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText,\r\n  Container\r\n} from 'reactstrap';\r\n\r\nclass AppNavbar extends Component {\r\n    state = {\r\n        isOpen: false\r\n    }\r\n    \r\n    toggle = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\"> \r\n                    <Container>\r\n                        <NavbarBrand href=\"/\">ShoppingList</NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggle} />\r\n                        <Collapse isOpen={this.state.isOpen} navbar>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <NavLink href=\"https://github.com/Sethuram52001\">\r\n                                        Github\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default AppNavbar;","export const GET_ITEMS = \"GET_ITEMS\";\r\nexport const ADD_ITEM = \"ADD_ITEM\";\r\nexport const DELETE_ITEM = \"DELETE_ITEM\";\r\nexport const ITEMS_LOADING = \"ITEMS_LOADING\";","import axios from 'axios';\r\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from \"./types\";\r\n\r\n// dispatch - thunk\r\nexport const getItems = () => dispatch => {\r\n    dispatch(setItemsLoading());\r\n    axios.get('/api/items')\r\n        .then(res =>\r\n            dispatch({\r\n                type: GET_ITEMS,\r\n                payload: res.data\r\n            })\r\n        )\r\n    /*return {\r\n        type: GET_ITEMS\r\n    }*/\r\n}\r\n\r\nexport const deleteItem = (id) => dispatch => {\r\n    axios.delete(`/api/items/${id}`)\r\n        .then(res => \r\n            dispatch({\r\n                type: DELETE_ITEM,\r\n                payload: id\r\n                })\r\n            ) \r\n    /*return {\r\n        type: DELETE_ITEM,\r\n        payload: {id}\r\n    }*/\r\n}\r\n\r\nexport const addItem = (item) => dispatch => {\r\n    axios.post('/api/items', item)\r\n        .then(res =>\r\n            dispatch({\r\n                type: ADD_ITEM,\r\n                payload: res.data\r\n            })\r\n        )\r\n    /*return {\r\n        type: ADD_ITEM,\r\n        payload: item\r\n    }*/\r\n}\r\n\r\nexport const setItemsLoading = () => {\r\n    return {\r\n        type: ITEMS_LOADING\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { connect } from \"react-redux\";\r\nimport { getItems, deleteItem } from \"../actions/itemActions\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ShoppingList extends Component {\r\n    state = {}\r\n    \r\n    componentDidMount() {\r\n        this.props.getItems();\r\n    }\r\n\r\n    onDeleteClick = (id) => {\r\n        this.props.deleteItem(id);\r\n        console.log(id);\r\n    }\r\n    \r\n    render() { \r\n        const  items = this.props.item.items;\r\n        return ( \r\n            <Container>\r\n                {/*<Button color=\"dark\" style={{ marginBottom: '2rem' }} onClick={() => {\r\n                    const name = prompt('enter item');\r\n                    if (name) {\r\n                        this.setState(state => ({\r\n                            items: [...state.items, { id: uuid(), name: name }]\r\n                        }));\r\n                    }\r\n                }}>Add Item</Button>*/}\r\n                <ListGroup>\r\n                    <TransitionGroup className=\"shopping-list\">\r\n                        {items.map(({ _id, name }) => (\r\n                            <CSSTransition key={_id} timeout={500} classNames=\"fade\">\r\n                                <ListGroupItem>\r\n                                    <Button className=\"remove-btn\" color=\"danger\" size=\"sm\"\r\n                                        onClick={this.onDeleteClick.bind(this,_id)}>\r\n                                        &times;\r\n                                    </Button>\r\n                                    {name}\r\n                                </ListGroupItem>\r\n                            </CSSTransition>\r\n                        ))}\r\n                    </TransitionGroup>\r\n                </ListGroup>\r\n            </Container>\r\n         );\r\n    }\r\n}\r\n\r\nShoppingList.propTypes = {\r\n    getItems: PropTypes.func.isRequired,\r\n    item: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    item: state.item\r\n});\r\n\r\nexport default connect(mapStateToProps, {getItems,deleteItem})(ShoppingList);","import { v4 as uuid } from 'uuid';\r\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    items: [],\r\n    loading: false\r\n}\r\n\r\nexport default function (state=initialState,action) {\r\n    switch (action.type) {\r\n        case GET_ITEMS:\r\n            return {\r\n                ...state,\r\n                items: action.payload,\r\n                loading: false\r\n            }\r\n        \r\n        case DELETE_ITEM:\r\n            console.log('del was called'+ action.payload._id)\r\n            return {\r\n                ...state,\r\n                items: state.items.filter(item => item._id !== action.payload)\r\n            }\r\n        \r\n        case ADD_ITEM:\r\n            return {\r\n                ...state,\r\n                items: [action.payload, ...state.items]\r\n            }\r\n        \r\n        case ITEMS_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport itemReducer from \"./itemReducer\";\r\n\r\nexport default combineReducers({\r\n    item: itemReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n));\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input\r\n} from 'reactstrap';\r\nimport { connect } from \"react-redux\";\r\nimport { addItem } from \"../actions/itemActions\";\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nclass ItemModal extends Component {\r\n    state = { \r\n        modal: false,\r\n        name: ''\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newItem = {\r\n           // id: uuid(),\r\n            name: this.state.name\r\n        }\r\n\r\n        // add item via addItem action\r\n        this.props.addItem(newItem);\r\n        \r\n        // close the modal\r\n        this.toggle();\r\n    }\r\n    \r\n    render() { \r\n        return ( \r\n            <div>\r\n                <Button\r\n                    color=\"dark\"\r\n                    style={{ marginBottom: '2rem' }}\r\n                    onClick={this.toggle}\r\n                >\r\n                    Add Item\r\n                </Button>\r\n                <Modal\r\n                    isOpen={this.state.modal}\r\n                    toggle={this.toggle}\r\n                >\r\n                    <ModalHeader toggle={this.toggle}>Add To Shopping List</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.onSubmit}>\r\n                            <FormGroup>\r\n                                <Label for=\"item\">Item</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    id=\"item\"\r\n                                    placeholder=\"Add shopping item\"\r\n                                    onChange={this.onChange}\r\n                                />\r\n                                <Button\r\n                                    color=\"dark\"\r\n                                    style={{ marginTop: \"2rem\" }}\r\n                                    block\r\n                                >\r\n                                    Add Item\r\n                                </Button>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    item: state.item\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {addItem})(ItemModal);\r\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport AppNavbar from './components/AppNavbar';\nimport ShoppingList from './components/ShoppingList';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport ItemModal from './components/ItemModal';\nimport { Container } from \"reactstrap\";\n\nclass App extends Component {\n  state = {  }\n  render() { \n    return (\n      <Provider store={store}>\n      <div className=\"App\">\n          <AppNavbar />\n          <Container>\n            <ItemModal />\n            <ShoppingList />\n          </Container>\n        </div>\n      </Provider>\n      );\n  }\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}